apiVersion: apps/v1
kind: Deployment
metadata:
    name: backend
    labels:
        app: elimination
        task: backend

spec:
    replicas: 5
    selector:
        matchLabels:
            app: elimination
            task: backend

    template:
        metadata:
            labels:
                app: elimination
                task: backend
        spec:
            imagePullSecrets:
                -   name: regcred
            containers:
                -   name: backend
                    image: ghcr.io/gunn-elimination/elimination-2023/backend:latest
                    ports:
                        -   containerPort: 80
                    env:
                        -   name: PORT
                            value: "80"
                    envFrom:
                        -   secretRef:
                                name: elimination-2023-backend
                    resources:
                        requests:
                            memory: "512Mi"
                            cpu: "500m"

                        limits:
                            memory: "1024Mi"
                            cpu: "1000m"
                    livenessProbe:
                        httpGet:
                            path: /api/actuator/health/liveness
                            port: 80
                        initialDelaySeconds: 60
                        periodSeconds: 10

                    readinessProbe:
                        httpGet:
                            path: /api/actuator/health/readiness
                            port: 80
                        initialDelaySeconds: 60
                        periodSeconds: 2

                    volumeMounts:
                        -   name: spring-yml-config
                            mountPath: /app/config/application.yml

                    imagePullPolicy: Always

                -   name: ts-sidecar
                    imagePullPolicy: Always
                    image: "ghcr.io/tailscale/tailscale:v1.36"
                    securityContext:
                        runAsUser: 1000
                        runAsGroup: 1000
                    env:
                        - name: TS_KUBE_SECRET
                          value: ""
                        -   name: TS_USERSPACE
                            value: "true"
                        -   name: TS_AUTHKEY
                            valueFrom:
                                secretKeyRef:
                                    name: tailscale-auth
                                    key: TS_AUTHKEY

            volumes:
                -   name: spring-yml-config
                    configMap:
                        name: spring-yml-config

---
apiVersion: v1
kind: Service
metadata:
    name: backend-service
    annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/api/actuator/prometheus'
        prometheus.io/port: '80'


spec:
    type: ClusterIP
    ports:
        -   name: http
            port: 80
    selector:
        app: elimination
        task: backend

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
    name: backend-service-monitor
    labels:
        app: elimination
        task: backend
        release: monitoring

spec:
    endpoints:
        -   port: http
            interval: 30s
    selector:
        matchLabels:
            app: elimination
            task: backend