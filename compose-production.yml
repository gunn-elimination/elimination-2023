version: "3.9"
services:
    backend:
        restart: always

        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
            - "traefik.http.routers.backend.entrypoints=web"
            - "traefik.http.services.backend.loadbalancer.server.port=80"
            - "traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto: https"
            # sticky session
            - "traefik.http.services.backend.loadbalancer.sticky=true"
            # cors credentials
        environment:
            PORT: 80
            CONTEXT_PATH: /api

            JDBC_DATABASE_URL: ${POSTGRES_URL}
            JDBC_DATABASE_USERNAME: ${POSTGRES_USER}
            JDBC_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}

            CLIENT_ID: ${CLIENT_ID}
            CLIENT_SECRET: ${CLIENT_SECRET}
            COOKIE_SAMESITE: ${COOKIE_SAMESITE}

        extra_hosts:
            -   "host.docker.internal:host-gateway"
        build: backend
        deploy:
            replicas: 5
            restart_policy:
                condition: on-failure
    frontend:
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
            - "traefik.http.routers.frontend.entrypoints=web"
            - "traefik.http.services.frontend.loadbalancer.server.port=80"
            - "traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto: https"

        build: frontend